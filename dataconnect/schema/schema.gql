# Schema for wedding gifts and blessings app

# User table is keyed by Firebase Auth UID.
type User @table {
  # `@default(expr: "auth.uid")` sets it to Firebase Auth UID during insert and upsert.
  id: String! @default(expr: "auth.uid")
  username: String! @col(dataType: "varchar(50)")
  # The `user: User!` field in the Blessing table generates the following one-to-many query field.
  blessings_on_user: [Blessing!]!
  # The `user: User!` field in the Reaction table generates the following one-to-many query field.
  reactions_on_user: [Reaction!]!
}

# Blessing/Gift message with optional media attachments
type Blessing @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  # The user field adds the following foreign key field
  userId: String!
  message: String! @col(dataType: "TEXT")
  isPublic: Boolean! @default(expr: "true")
  mediaUrl: String? # URL to photo/video attachment
  mediaType: String? # 'image' or 'video'
  createdAt: Date! @default(expr: "request.time")
  # The following fields are generated from the Reaction table
  reactions_on_blessing: [Reaction!]!
}

# Emoji reactions to blessings
type Reaction @table(key: ["blessing", "user"]) {
  user: User!
  userId: String!
  blessing: Blessing!
  blessingId: UUID!
  emoji: String! @col(dataType: "varchar(10)")
  createdAt: Date! @default(expr: "request.time")
}
