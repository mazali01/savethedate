# Mutations for wedding gifts and blessings app

# Upsert (update or insert) a user's username based on their auth.uid
mutation UpsertUser($username: String!) @auth(level: USER) {
  # The "auth.uid" server value ensures that users can only register their own user.
  user_upsert(data: { id_expr: "auth.uid", username: $username })
}

# Create a new blessing/gift message
mutation CreateBlessing($message: String!, $isPublic: Boolean!, $mediaUrl: String, $mediaType: String)
@auth(level: USER) {
  blessing_insert(data: {
    userId_expr: "auth.uid"
    message: $message
    isPublic: $isPublic
    mediaUrl: $mediaUrl
    mediaType: $mediaType
  })
}

# Add or update an emoji reaction to a blessing
mutation AddReaction($blessingId: UUID!, $emoji: String!) @auth(level: USER) {
  reaction_upsert(
    data: {
      userId_expr: "auth.uid"
      blessingId: $blessingId
      emoji: $emoji
    }
  )
}

# Remove a reaction from a blessing
mutation RemoveReaction($blessingId: UUID!) @auth(level: USER) {
  reaction_delete(key: { userId_expr: "auth.uid", blessingId: $blessingId })
}

# Delete a blessing (only by the creator)
mutation DeleteBlessing($blessingId: UUID!) @auth(level: USER) {
  blessing_delete(where: { id: { eq: $blessingId }, userId_expr: "auth.uid" })
}
